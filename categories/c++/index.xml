<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on Davis Freimanis</title>
    <link>https://davisfreimanis.github.io/categories/c&#43;&#43;/index.xml</link>
    <description>Recent content in C&#43;&#43; on Davis Freimanis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://davisfreimanis.github.io/categories/c&#43;&#43;/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Övning 1</title>
      <link>https://davisfreimanis.github.io/kth/dd1387/ovning1/</link>
      <pubDate>Wed, 27 Apr 2016 11:21:28 +0200</pubDate>
      
      <guid>https://davisfreimanis.github.io/kth/dd1387/ovning1/</guid>
      <description>

&lt;h1 id=&#34;övning-1&#34;&gt;Övning 1&lt;/h1&gt;

&lt;h2 id=&#34;makefiler&#34;&gt;Makefiler&lt;/h2&gt;

&lt;h2 id=&#34;länkning&#34;&gt;Länkning&lt;/h2&gt;

&lt;p&gt;Kompilerar objektfiler från cpp filerna och sedan länkar till en exekverbarfil. Kollar även om ändringar är gjorda för att inte kompilera om.&lt;/p&gt;

&lt;h2 id=&#34;preprocessorer&#34;&gt;Preprocessorer&lt;/h2&gt;

&lt;p&gt;Man inkluderar headerfilerna &lt;code&gt;#include &amp;quot;header.h&amp;quot;&lt;/code&gt; (söker lokalt i mappen) eller &lt;code&gt;&amp;lt;header.h&amp;gt;&lt;/code&gt; (söker i standardsökvägarna).
&lt;code&gt;#define&lt;/code&gt; är till för att definiera macron #undef för att ta bort definitionen.&lt;/p&gt;

&lt;h2 id=&#34;pekare-och-referencer&#34;&gt;Pekare och referencer&lt;/h2&gt;

&lt;p&gt;int x = 0; // lägger int på stacken
int *p = &amp;x; // skapar en pekare som refererar till minnespositionen där x ligger
int &amp;amp;r = x;&lt;/p&gt;

&lt;p&gt;Man kan inkrementera *p med ++ så kommer den hoppa 4 bytes fram då en int vanligtvis tar så mycket plats.&lt;/p&gt;

&lt;h2 id=&#34;strukturer&#34;&gt;Strukturer&lt;/h2&gt;

&lt;p&gt;Struct allt public som default
Class allt private som default&lt;/p&gt;

&lt;h2 id=&#34;scope&#34;&gt;Scope&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;int getX();
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;int Koord::getX() 
{
	return x;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The java way&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;void setX(int x);

void Koord::setX(int x)
{
	this-&amp;gt;x = x;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The C way&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int&amp;amp; x()
{
	return x;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;När en metod definieras som const så kommer inga värden att ändras. Read only metod!! En const metod kan ENDAST anropa read only metoder.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;this&lt;/code&gt; är en pekare och för att komma åt den så måste man skriva &lt;code&gt;(*this).x&lt;/code&gt;. Ett enklare sätt att skiva det är &lt;code&gt;this-&amp;gt;x&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&#34;rule-of-three&#34;&gt;Rule of three&lt;/h1&gt;

&lt;p&gt;Körs automatiskt
* Copy consturctor
* Destructor
* Tilldelningsoperator&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>